[ConsoleVariables]
r.ShaderPipelineCache.StartupMode=0
r.ShaderPipelineCache.BatchSize=100
r.ShaderPipelineCache.BatchTime=100
r.UseAspectRatioScaling=1
Slate.RequireFocusForGamepadInput=True

[/Script/Engine.RendererSettings]
r.ShaderPipelineCache.Enabled=1
r.FidelityFX.FSR2.HistoryFormat=0

r.TemporalAAPauseCorrect=1 [0: default] (holds onto render targets longer preventing reuse but consumes more memory)
r.TemporalAACatmullRom=1 [0: default] (use CatmullRom filter instead of Gaussian)
r.TemporalAA.R11G11B10History=1 [0: default] (TAA Optimization)
r.TemporalAA.HistoryScreenPercentage=200 [100: default] (200: quite performance heavy but has the benefit of improving motion clarity at native or higher resolutions, however, it makes light sources with bloom to flicker)
r.TemporalAA.Upsampling=1 [1: default] (1: great detail reconstruction when r.ScreenPercentage < 100; breaks depth of field up close when turned on (check title-screen))
r.TemporalAA.Algorithm=0 [0: default] 1: (UE's Gen5 TAA, big reduction of TAA jitter + overall sharper image (also reintroduces some specular aliasing back) but causes ghosting on thin objects, especially noticeable when r.ScreenPercentage < 100; serious visual errors appear if r.TemporalAA.HistoryScreenPercentage=200 and/or r.TemporalAASamples < 4; it is also more expensive than the default TAA)
r.TemporalAACurrentFrameWeight=0.001 [0.04: default] (higher is sharper but makes the TAA jitter very noticeable; overwritten by r.TemporalAA.Algorithm=1)
r.TemporalAASamples=4 [8: default] (lower values have less jitter but also lower geometry antialiasing quality; if r.TemporalAA.Algorithm=1 and you get visual errors, increase this value)

r.NGX.DLSS.Preset=3 [0: default ; 1=A, 2=B, 3=C, 4=D, 5=E, 6=F, 7=G: Subjective] (Only 3 and 6 don't have ghosting in LiesOfP)
r.NGX.LogLevel=0 [1: default]

r.MipMapLODBias=-1 [0: default] (values less than 0 means sharper textures and foliage, but also introduces some specular aliasing back into the scene)
r.ViewTextureMipBias.Min=0 [-2: default] (supposedly helps with performance on vista shots, couldn't tell a difference at least in this game)
r.ViewTextureMipBias.Offset=0 [-0.3: default] (supposedly helps with performance on vista shots, couldn't tell a difference at least in this game)
r.ForceHighestMipOnUITextures=1 [0: default] (UI assets seemingly still load low resolution variants despite this being turned on (e.g. UI is blurrier when running the game at native 720p))
; r.ContactShadows.NonShadowCastingIntensity=1 [0: default] (1: allows light sources to also be self-shadowed, but causes buggy/blocky shadows when viewed from afar)
; r.Shadow.FilterMethod=0 [0: default] (1: enables NVIDIA PCSS, causes blocky NPC shadows)
r.Shadow.CSMDepthBias=3 [10: default] (lower values causes a moire effect on the ground; lower values cause shadows to start closer from their sources (e.g. look at character's feet especially noticeable at low CascadeShadowMap resolutions))
r.SSR.Temporal=1 [0:default] (SSR is less grainy with it on, but it loses some detail in motion)

r.SSGI.Enable=1 [0: default] (1: the most expensive setting but also the most noticeable, however, it isn't necessarily better, just different from how the game renders it's ambient occlusion; it is more accurate at grounding objects than SSAO plus it enables bounce lighting to the scene, but since it's a ScreenSpace effect, the moment the light source disappears, the bounce lighting also disappears)

r.RayTracing.Shadows.AcceptFirstHit=1 [0: default] (small performance increase at the cost of supposed worse denoising)

r.Reflections.Denoiser=0 [2: default] (when enabled, it makes deferred RT reflections lose a lot of detail, plus it doesn't really solve the grainyness in motion)
r.RayTracing.Reflections.ExperimentalDeferred=1 [0: default] (looks a lot better than the default RT reflections, and is surprisingly more performant)
r.RayTracing.Reflections.ExperimentalDeferred.Glossy=1 [1: default] (0: makes objects reflect more, looks innaccurate)
r.RayTracing.Reflections.ExperimentalDeferred.SmoothBias=1 [1: default] (0: reflections look broken)
r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve=1 [1: default] (0: looks way better when standing still, but is very grainy in motion)
r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.NumSamples=32 (higher values makes RT more stable at the cost of some specular detail)
r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.TemporalQuality=2 (0: again, looks better standing still, but instability is very noticeable in motion)
r.RayTracing.Reflections.ExperimentalDeferred.SpatialResolve.TemporalWeight=1 [0.95: default] (higher values lose more detail, but helps with the shimmering)
r.RayTracing.Reflections.ExperimentalDeferred.HorizontalResolutionScale=2 [1: default] (adjusts the RT reflection resolution, lower values have better performance and also worse stability, offsetting this to 2 so that it still looks stable when upscaling)
r.RayTracing.Reflections.ReflectionCaptures=1 [0: default] (more objects are captured in the reflections, very expensive)

; r.RayTracing.AmbientOcclusion.SamplesPerPixel=1 [-1: default] (setting this to 1 should unclamp it from the postprocessing volume value)
r.RayTracing.AmbientOcclusion.EnableMaterials=1 [0: default] (fixes some blocky AO near foliage textures, also reduces AO around characters, especially on their hair)

[/Script/FSR2TemporalUpscaling.FSR2Settings]
r.FidelityFX.FSR2.HistoryFormat=0

[SystemSettings]
LevelSequence.AlwaysRestoreAspectRatioConstraint=True

[/Script/EngineSettings.GameMapsSettings]
GameDefaultMap=/Game/Map/PSO_P.PSO_P

[/Script/Engine.LocalPlayer]
AspectRatioAxisConstraint=AspectRatio_MaintainYFOV

[DevOptions.Shaders]
NeedsShaderStableKeys=true
PSOFileServer="//10.29.82.138/lop/PSOCache"

[OnlineSubsystem]
DefaultPlatformService=STEAM

[/Script/Engine.GarbageCollectionSettings]
gc.MaxObjectsInGame=2000000
